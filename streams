#!/usr/bin/env python3

import argparse
import requests
import string

def can_connect_to_twitch():
    try:
        check = requests.get('http://www.twitch.tv/')
        return True
    except requests.ConnectionError:
        print('error: can\'t reach twitch.tv')
    return False

def trim(string, length):
    if string is None:
        return "None"
    elif len(string) <= length:
        return string
    else: 
        return string[0:length - 3] + '...'

def print_streams(number):
    url = 'https://api.twitch.tv/kraken/streams?limit=' + str(number)
    api_call = requests.get(url)
    twitch_data = api_call.json()  
    streams = twitch_data['streams']
    line_size = 79
    number_size = 5
    name_size = 22
    viewers_size = 11
    game_size = 41
    header = '{0:<%d}{1:<%d}{2:<%d}' % (number_size, name_size, viewers_size)
    content = '{0:<%d}{1:<%d}{2:<%d,}' % (number_size, name_size, viewers_size)
    print('-' * line_size)
    print(header.format(' #','channel','viewers') + 'game')
    print('-' * line_size)
    for x in range(0, len(streams)):
        number = ' ' + str(x + 1) + '.'
        name = trim(streams[x]['channel']['name'], name_size - 1)
        viewers = streams[x]['viewers']
        game = trim(streams[x]['game'], game_size - 1)
        print(content.format(number, name, viewers) + game)

parser = argparse.ArgumentParser(
        description = "lists the top streams on twitch.tv")
parser.add_argument("-n", "--number", type=int, choices=[10, 25, 50, 100], 
        help="number of streams to display, default is 25")
args = parser.parse_args()
number_to_display = 25
if args.number != None:
    number_to_display = args.number
if can_connect_to_twitch(): 
    print_streams(number_to_display)
